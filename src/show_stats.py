#!/usr/bin/python


# takes some file generated by proj_stats.sh in input (on stdin)

from sys import stderr,stdin,argv
from os import popen


WIDTH=int(popen('stty -F /dev/tty size', 'r').read().split()[1])

def process_line(s):
	(n,s)=tuple(s.strip().split('\t'))
	return (int(n),s)

if len(argv)==1:
	L=map(process_line,stdin.xreadlines())
else:
	fp=file(argv[1],'r')
	L=map(process_line,fp.xreadlines())
	fp.close()

values=[n for (n,s) in L]

maxi,total,number=max(values),sum(values),len(values)
median=values[number/2]
avg=total/number
del values

def col(val):
	if val>median*3/2:
		if val>median*27/8:
			if val>median*27*9/8/4:
				return "35"
			else:
				return "31"
		else:
			return "33"
	elif val<median*2/3:
		if val<median*8/27:
			if val<median*8*4/27/9:
				return "35"
			else:
				return "34"
		else:
			return "36"
	else:
		return "32"

maxlen=max([len(i) for (_,i) in L])
nmaxlen=len(str(maxi))


def tag(s,nb):
	s=' '+s+' '
	n=maxlen-len(s)
	print "  \033[1m"+(n/2)*'_'+s+(n-n/2)*'_',
	print (nmaxlen-len(str(nb)))*' '+str(nb),"\033[0m"

print
n,s=total,"TOTAL"
print " \033[1m",s+(maxlen-len(s)+nmaxlen-len(str(n)))*' ',n,"\033[0m"

prv=maxi
for (n,s) in L:
	if prv>avg and n<=avg:
		tag("average",avg)
	elif prv>median and n<=median:
		tag("median",median)
	ps=s.rsplit('/',1)
	if len(ps)==1:
		ps=s
	else:
		ps='\033[30;1m'+ps[0]+'/\033[0m'+ps[1]
	print ' ',ps+(maxlen-len(s)+nmaxlen-len(str(n)))*' ',
	print "\033["+col(n)+"m"+str(n),#+"\033[30;1m",
	#print (140*n/maxi)*"\xe2\x96\x92","\033[0m"
	print ((WIDTH-maxlen-nmaxlen-2-1-1-2)*n/maxi)*"\xe2\x96\x91","\033[0m"
	prv=n

